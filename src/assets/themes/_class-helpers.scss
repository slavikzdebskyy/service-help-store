.no-margin {
  margin: 0 !important;
}

.no-padding {
  padding: 0 !important;
}

/**
  The classes are named using the format {property}{sides}-{size}.
  This is notation as in bootstrap[https://getbootstrap.com/docs/4.3/utilities/spacing/#notation]

  Where property is one of:
  m - for classes that set margin
  p - for classes that set padding

  Where sides is one of:
  t - for classes that set margin-top or padding-top
  b - for classes that set margin-bottom or padding-bottom
  l - for classes that set margin-left or padding-left
  r - for classes that set margin-right or padding-right
  x - for classes that set both *-left and *-right
  y - for classes that set both *-top and *-bottom
  blank - for classes that set a margin or padding on all 4 sides of the element

  Where size is even numbers of range from 0 to 32.

  For example we can use as mt-10, m-0, mx-20, my-20, m-6.
 */

$util-range-to: 120;

// Dimensions and indents in the ascira design system are multiples of 4 or 8
$multiple-number: 2;

@function increment-by-4($i, $unit) {
  @return $i + $unit;
}

// Padding helper
@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .pl-#{$i} {
      padding-left: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .pr-#{$i} {
      padding-right: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .pt-#{$i} {
      padding-top: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .pb-#{$i} {
      padding-bottom: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .px-#{$i} {
      padding-right: increment-by-4($i, px);
      padding-left: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .py-#{$i} {
      padding-top: increment-by-4($i, px);
      padding-bottom: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .p-#{$i} {
      padding: increment-by-4($i, px);
    }
  }
}

// Margin helper
@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .mt-#{$i} {
      margin-top: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .mr-#{$i} {
      margin-right: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .mb-#{$i} {
      margin-bottom: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .ml-#{$i} {
      margin-left: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .mx-#{$i} {
      margin-right: increment-by-4($i, px);
      margin-left: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .my-#{$i} {
      margin-top: increment-by-4($i, px);
      margin-bottom: increment-by-4($i, px);
    }
  }
}

@for $i from 0 to $util-range-to {
  @if $i % $multiple-number == 0 {
    .m-#{$i} {
      margin: increment-by-4($i, px);
    }
  }
}
